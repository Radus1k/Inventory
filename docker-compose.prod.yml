version: '3.3'

volumes:
  pgdata:
  pgadmin:
  osm-data:
    external: true

services:
  nginx:
    build:
      context: .
      dockerfile: docker/Dockerfile.nginx
    volumes:
      - ./source/content:/usr/src/app/content
    ports:
      # TODO: '127.0.0.1' -> [Production IP]
      - "80:80"
    # extra_hosts:

    hostname: nginx
    container_name: nginx
    restart: on-failure
    depends_on:
      - django

  django:
    build:
      context: .
      dockerfile: docker/Dockerfile.dev.django
    ports:
      - "0.0.0.0:8000:8000"
    volumes:
      - ./source:/usr/src/app/source
      - /tmp:/tmp
    hostname: django
    environment:
      - PRODUCTION=false
      - RUN_DOCKERIZED=1
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=1
      - POSTGRES_NAME
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_HOST
      - POSTGRES_PORT
      - IS_PRODUCTION=1
    depends_on:
      - celery_beat
      - celery_worker
    container_name: django 

  celery_beat:
    build:
      context: .
      dockerfile: docker/Dockerfile.celery
    command: celery -A inventory.celery beat
    hostname: celery_beat
    container_name: celery_beat
    environment:
      - RUN_DOCKERIZED=1
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=1
      - POSTGRES_NAME
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_HOST
      - POSTGRES_PORT
    depends_on:
      - celery_worker

  celery_worker:
    build:
      context: .
      dockerfile: docker/Dockerfile.celery
    command: celery -A inventory.celery worker
    hostname: celery_worker
    container_name: celery_worker
    environment:
      - RUN_DOCKERIZED=1
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=1
      - POSTGRES_NAME
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_HOST
      - POSTGRES_PORT
    depends_on:
      - redis
      - db_postgres

  redis:
    tty: true
    build:
      context: .
      dockerfile: docker/Dockerfile.redis
    ports:
      - "6379:6379"
    volumes:
      - /tmp:/tmp
    hostname: redis
    container_name: redis
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL,CONFIG
    restart: on-failure

  db_pgadmin:
    image: dpage/pgadmin4
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "127.0.0.1:8001:80"
    container_name: db_pgadmin
    environment:
      - POSTGRES_NAME
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_HOST
      - POSTGRES_PORT
    depends_on:
      - db_postgres
    
  db_postgres:
    image: postgres
    volumes:
      - pgdata:/var/lib/postgresql/data
      - /tmp:/tmp
    environment:
      - TZ=Europe/Bucharest
      - PGTZ=Europe/Bucharest
      - POSTGRES_NAME
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_HOST
      - POSTGRES_PORT
    hostname: db_postgres
    container_name: db_postgres

  tileserver:
    image: overv/openstreetmap-tile-server
    volumes:
      - osm-data:/data/database
    ports:
      - 8080:80
    command: run 
